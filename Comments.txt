“ребовани€:
	1. ћинимальное потребление ресурсов:
		¬ажно оптимизировать использование ресурсов CPU и пам€ти, особенно после инициализации приложени€, когда нагрузка стабилизируетс€.

	2.–азмещение подов на разных нодах дл€ отказоустойчивости:
		Ќам необходимо настроить "анти-афинность" (anti-affinity), чтобы поды не размещались на одной ноде.

	3. ѕод не должен обрабатывать запросы до завершени€ инициализации:
		ƒл€ этого нужно использовать механизм readinessProbe, который будет определ€ть готовность пода к обработке трафика только после успешной инициализации.

Ўаги:
	1. Ќастроим количество подов:
		ƒл€ стабильной работы приложени€ 3 пода будет достаточно, и мы зададим это количество в секции replicas.

	2. Ќастроим ресурсы:
		ƒл€ первого запуска приложение требует больше CPU, поэтому настроим requests и limits дл€ CPU 
		и пам€ти, чтобы оно могло справитьс€ с инициализацией, но при этом не использовать больше ресурсов, чем необходимо после инициализации.

	3. ƒобавим анти-афинность дл€ распределени€ подов по нодам:
		»спользуем anti-affinity, чтобы каждый под был на отдельной ноде.
	4. Ќастроим readinessProbe:
		»спользуем эту проверку, чтобы убедитьс€, что под готов принимать трафик только после завершени€ инициализации.